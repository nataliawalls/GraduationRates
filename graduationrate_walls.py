# -*- coding: utf-8 -*-
"""GraduationRate_walls

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LypbanLbDd2sNBxjGfFyAkWI_swWEfOE
"""

#importing packages and mounting google drive

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt

from google.colab import drive
drive.mount('/content/drive')
drive_dir = '/content/drive/Shareddrives/MATH 3439 - Spring 2023/'

#loading data frames

df1 = pd.read_csv('/content/drive/Shareddrives/project 1 /c2021_a (3).csv')
df2 = pd.read_csv('/content/drive/Shareddrives/MATH 3439 - Spring 2023/data/university_graduation/university info.csv', encoding= 'unicode_escape')

#columns kept
df2 = df2[['UNITID', 'INSTNM', "CITY", "STABBR"]]

#mergings both dataframes into one

df = pd.merge(df1, df2, on = "UNITID")
df.head()

df.columns

#cleaning up df to be able to read column names

df = df.drop(['CAIANT', 'CAIANM', 'CAIANW','CNHPIT', 'CNHPIM', 'CNHPIW', 'C2MORM', 'C2MORW', 'CUNKNT', 'CUNKNM', 'CUNKNW'], axis=1)
df = df.drop(['XCTOTALT','XCTOTALM','XCTOTALW','XCAIANT','XCAIANM','XCAIANW','XCASIAT','XCASIAM','XCBKAAT','XCBKAAM','XCBKAAW','XCHISPT','XCHISPM','XCHISPW','XCNHPIT','XCNHPIM',
'XCNHPIW','XCWHITT','XCWHITM','XCWHITW','XC2MORT','XC2MORM','XC2MORW','XCUNKNT','XCUNKNM','XCUNKNW','XCNRALT','XCNRALM','XCNRALW', 'XCASIAW', 'C2MORT'], axis=1)

df = df.rename(columns={'CTOTALT': 'Grand total', 'CTOTALM': 'Grand total men', 'CTOTALW': 'Grand total women', 'CASIAT': 'Asian total',
                                        'CASIAM': 'Asian total men', 'CASIAW': 'Asian total female', 'CBKAAT': 'Black total', 'CBKAAM': 'Black total men',
                                        'CBKAAW': 'Black total women', 'CHISPT': 'Hispanic total', 'CHISPM': 'Hispanic total men', 'CHISPW': 'Hispanic total female',
                                        'CWHITT': 'White total', 'CWHITM': 'White total men', 'CWHITW': 'White total female', 'CNRALT': 'Nonresident alien total',
                                        'CNRALM': 'Nonresident alien total men', 'CNRALW ': 'Nonresident alien total female'})
df.columns

df.head()

#grouping the CIPCODE into an integer to group them into their specified major group 

df['Major Group'] = df['CIPCODE'].astype(int)
df['Major Group'].unique()

#making new df that only focused on the Major group and the gender

majors_df = df.groupby('Major Group').agg({'Grand total': np.sum,'Grand total men':np.sum,'Grand total women':np.sum})

#adding columns calculating percentages per gender

majors_df['percentage men'] = 100*(majors_df['Grand total men']/majors_df['Grand total'])
majors_df['percentage women'] = 100*(majors_df['Grand total women']/majors_df['Grand total'])

majors_df.head()

#dropping the majors that we are not focusing on

majors_df = majors_df.drop([1,3,4,15,19,23,24,26,31,40,42,43,44,50,51,99,5,30,38,41,54,39,22,25,12,47,48,49,46,29], axis=0)

majors_df

#dropping the 'total' columns to only focus on percents

majors_df = majors_df.drop(['Grand total', 'Grand total men', 'Grand total women'], axis=1)

#adding column with the names of major that correlate to the integer in 'Major Group'

major = ['Communication and Journalism', 'Communication Technologies','Computer Science','Education','Engineering','Foreign Languages, Literature, and Linguistics',
         'Mathematics and Statistics','Social Sciences','Business, Management, and Marketing']
majors_df['Major'] = major

majors_df

#changing index to be the name of majors

majors_df=majors_df.set_index('Major')

majors_df

#making bar graph comparing genders between majors

majors_df.plot(kind='barh',
               #figsize=(25,17),
               color=['blue','pink'],
               title="Gender Comparisons by Major",
               ylabel='Percent Granduated',
               xlabel='Major',
               legend=False)

#making a new df grouping different races by the major they graduate from

majors_ethnicity_df = df.groupby('Major Group').agg({'Grand total': np.sum,'Asian total':np.sum,'Black total':np.sum, 
                                                     'White total':np.sum, 'Hispanic total':np.sum, 'Nonresident alien total':np.sum})

majors_ethnicity_df['percentage Asian total'] = 100*majors_ethnicity_df['Asian total']/majors_ethnicity_df['Grand total']
majors_ethnicity_df['percentage Black total'] = 100*majors_ethnicity_df['Black total']/majors_ethnicity_df['Grand total']
majors_ethnicity_df['percentage White total'] = 100*majors_ethnicity_df['White total']/majors_ethnicity_df['Grand total']
majors_ethnicity_df['percentage Hispanic total'] = 100*majors_ethnicity_df['Hispanic total']/majors_ethnicity_df['Grand total']
majors_ethnicity_df['percentage Nonresident alien total'] = 100*majors_ethnicity_df['Nonresident alien total']/majors_ethnicity_df['Grand total']

majors_ethnicity_df = majors_ethnicity_df.drop([1,3,4,15,19,23,24,26,31,40,42,43,44,50,51,99,5,30,38,41,54,39,22,25,12,47,48,49,46,29], axis=0)
majors_ethnicity_df = majors_ethnicity_df.drop(['Grand total', 'Asian total', 'Black total', 'White total','Hispanic total', 'Nonresident alien total','percentage White total'], axis=1)

majors_ethnicity_df.head()

#making a bar graph of the race comparisons by major

majors_ethnicity_df.plot(kind='barh',
                         figsize=(14,8),
                         #color=['blue','pink'],
                         title="Ethincity Comparisons by Major",
                         ylabel='Percent Granduated',
                         xlabel='Major')

#making new columns of percentage of races that graduated

df['percentage Asian total'] = 100*df['Asian total']/df['Grand total']
df['percentage Black total'] = 100*df['Black total']/df['Grand total']
df['percentage White total'] = 100*df['White total']/df['Grand total']
df['percentage Hispanic total'] = 100*df['Hispanic total']/df['Grand total']
df['percentage Nonresident alien total'] = 100*df['Nonresident alien total']/df['Grand total']

df.head()

#grouping states to see which states have the most graduates

newdf = df.groupby('STABBR').agg({'Grand total': len})

newdf.sort_values(by=['Grand total'], ascending = False)
newdf[newdf['Grand total'] > 150]
newdf.head()

#grouping races by what state they graduated from

grouped_df = df.groupby('STABBR').agg({'percentage Asian total':np.mean,'percentage Black total':np.mean,'percentage White total':np.mean,'percentage Nonresident alien total':np.mean})
grouped_df.head()

#merging newdf and grouped df

grouped_df2 = pd.merge(grouped_df,newdf, on = 'STABBR')

grouped_df2.head()

#only getting the top 10 states from grouped_df2

percentage_df = grouped_df2[grouped_df2['Grand total'] > 8500]
percentage_df = percentage_df.drop('Grand total', axis=1)

#making a bar graph of top 10 states races that graduate from each state

percentage_df.plot(kind='bar', 
                   grid = True, 
                   figsize = (20,10))